#####
# avivore config file
###

#####
# database settings
#  dbpath: <path to sqlite3 db file>
###
[database]
dbpath: avivore.db

#####
# twitter authentication settings
#  Please provide consumer key and secret. Credentials
#  file will contain OAuth tokens for further authentications.
#  It will be created upon the first successful authentication.
###
[twitter_auth]
credentials_file: .avivore.creds
consumer_key: 
consumer_secret: 

#####
# content type definition
#  Avivore searches tweets for specific objects
#  like ip addresses, phone numbers, ... . The
#  following section defines these objects. If a single tweet
#  contains multiple items, the priority of the extracted
#  item corresponds to the order of its definition (first type
#  definition has highest priority). Every object has a unique
#  id and a python regex. Format of the definition is:
#
#  id: 'regex'
###
[twitter_search_objects]
# ip addresses
0: '\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b'
# blackberry pin numbers
1: '\b[a-fA-F0-9]{8}\b'
# phone numbers
2: '(\(?\d{3}\)?[-\.\s]??\d{3}[-\.\s]??\d{4}|\(\d{3}\)\s*\d{3}[-\.\s]??\d{4}|\d{3}[-\.\s]??\d{4})'

#####
# twitter search definitions
#  Search terms:
#  Search terms are enclosed in '\'' and separated by ','.
#  They are added to the variable 'csv_search_term'.
#  Search interval:
#  Specifies time interval (in seconds) to wait between to
#  consecutive search queries.
###
[twitter_search]
csv_search_term: 'ip server', 'ip address', 'blackberry pin', 'bb pin',
	'bbm pin', 'text me', 'call me', 'phone me', 'new phone', 'new number'
# You'll want to set this to 10 seconds or higher!
interval: 30
